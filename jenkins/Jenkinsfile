#!groovy
pipeline {
    //agent { label {node ('common-runner && rust-runner-ec2-2') }}
    agent none
    environment {
        webhook_key = credentials('webhook_key')
    }

    stages {
        stage('Unit Test') {
            when {
                not {
//                    branch 'master'
                    branch 'ci-test'
                }
            }
            steps {
                sh 'cargo tarpaulin -v  --timeout 36000  --output-dir report --out Html'
                sh 'cargo clean'
                publishHTML target: [
                            reportName: '单元测试覆盖率报告',
                            reportDir: 'report',
                            reportFiles: 'tarpaulin-report.html',
                            reportTitles: '覆盖率',
                            allowMissing: true,
                            alwaysLinkToLastBuild: true,
                            keepAll: false
                        ]
            }
        }
        stage(build){
       parallel {
        stage('Code Build in runner-01') {
            when {
//                branch 'master'
                branch 'ci-test'
            }
            agent {label 'rust-runner-ec2-2'}
            steps {
                echo 'Code Building'
         //       sh 'cargo build --release'
            }
        }

        stage('Code Build in runner-02') {
            when {
//                branch 'master'
                branch 'ci-test'
            }
            agent {label 'common-runner'}
            steps {
                echo 'Code Building'
         //       sh 'cargo build --release'
            }
        }
        
        }
        }
    //TODO   stage('Deploy')
    }
    post {
        always {
            sh 'cargo clean'
        }
        fixed {
            script {
                    sh(script: 'bash jenkins/post.sh fixed')
            }
        }
        regression {
            script {
                    sh(script: 'bash jenkins/post.sh regression')
            }
        }
    }
}
